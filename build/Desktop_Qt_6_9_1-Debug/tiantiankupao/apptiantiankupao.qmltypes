import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "NetworkManager.h"
        name: "NetworkManager"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["tiantiankupao/NetworkManager 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [256]
        Signal {
            name: "peerDiscovered"
            Parameter { name: "ip"; type: "QString" }
            Parameter { name: "name"; type: "QString" }
        }
        Signal {
            name: "gameStateReceived"
            Parameter { name: "state"; type: "QVariantMap" }
        }
        Signal { name: "opponentConnected" }
        Signal {
            name: "gameDataReceived"
            Parameter { name: "data"; type: "QVariantMap" }
        }
        Signal {
            name: "connectionError"
            Parameter { name: "msg"; type: "QString" }
        }
        Signal { name: "isConnected" }
        Signal {
            name: "serverStarted"
            Parameter { name: "port"; type: "ushort" }
        }
        Signal {
            name: "serverStartFailed"
            Parameter { name: "error"; type: "QString" }
        }
        Method { name: "readBroadcastDatagrams" }
        Method { name: "onNewConnection" }
        Method { name: "onClientDisconnected" }
        Method { name: "onDataReceived" }
        Method {
            name: "sendGameState"
            Parameter { name: "state"; type: "QVariantMap" }
        }
        Method {
            name: "startServer"
            type: "bool"
            Parameter { name: "port"; type: "ushort" }
        }
        Method {
            name: "connectToHost"
            Parameter { name: "ip"; type: "QString" }
            Parameter { name: "port"; type: "ushort" }
        }
        Method {
            name: "sendGameData"
            Parameter { name: "data"; type: "QVariantMap" }
        }
        Method { name: "startBroadcasting" }
        Method { name: "stopBroadcasting" }
        Method { name: "discoverPeers" }
        Method { name: "disconnectFromHost" }
    }
}
